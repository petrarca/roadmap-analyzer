version: '3'

tasks:
  setup:
    desc: Create a Python virtual environment
    cmds:
      - if [ ! -d .venv ]; then uv venv; fi

  install:
    desc: Install the package in development mode
    deps: [setup]
    cmds:
      - uv pip install -e ".[dev]"

  format:
    desc: Format code using ruff
    cmds:
      - .venv/bin/ruff format src tests

  check:
    desc: Check and auto-fix code using ruff
    cmds:
      - .venv/bin/ruff check --fix src tests

  test:
    desc: Run tests
    cmds:
      - |
        if [ -d "tests" ] && [ "$(ls -A tests)" ]; then
          .venv/bin/pytest tests
        else
          echo "No tests found. Skipping tests."
          exit 0
        fi

  run:
    desc: Run the Streamlit application
    cmds:
      - .venv/bin/streamlit run src/roadmap_analyzer/main.py -- {{.CLI_ARGS}}

  clean:
    desc: Clean up temporary files and build artifacts
    cmds:
      - rm -rf build/ dist/ .pytest_cache/ .ruff_cache/ **/__pycache__/ **/*.egg-info/
      - find . -type d -name __pycache__ -exec rm -rf {} +
      - find . -type f -name "*.pyc" -delete

  fct:
    desc: Run format, check, and test tasks in sequence
    cmds:
      - task: format
      - task: check
      - task: test

  pre-commit-install:
    desc: Install pre-commit hooks
    deps: [install]
    cmds:
      - .venv/bin/pre-commit install
      - .venv/bin/pre-commit install --hook-type pre-push

  pre-commit-run:
    desc: Run pre-commit hooks on all files
    cmds:
      - .venv/bin/pre-commit run --all-files

  pre-commit-update:
    desc: Update pre-commit hooks
    cmds:
      - .venv/bin/pre-commit autoupdate

  pre-commit-uninstall:
    desc: Remove pre-commit hooks
    cmds:
      - .venv/bin/pre-commit uninstall
      - .venv/bin/pre-commit uninstall --hook-type pre-push
